#!/bin/bash

source check-variables

# declare a map to hold each user's latest update sequence
declare -A seqs
# loop through user names and get update sequences
while read user ; do
    seqs["${user}"]=`curl -s "${CLOUDANT_BASE_URL}/${user}/_changes?limit=0&descending=true" | jq -r '.last_seq'`
done < <( curl -s "https://${CLOUDANT_USER}:${CLOUDANT_PASSWORD}@${CLOUDANT_ACCOUNT}.cloudant.com/_all_dbs" | jq -r '.[]' | grep -v '^_' ) # get list of users from _all_dbs

# query the global changes feed
unbuffer curl -s "${CLOUDANT_BASE_URL}/_db_updates?feed=continuous" | while read line; do
    # get the sender from the update event
    sender=`echo "${line}" | jq -r '.dbname'`
    # get the type, i.e. updated, created, deleted. we are only interested in updates
    type=`echo "${line}" | jq -r '.type'`
    # if the database is not an internally used database and the event type is updated
    if [[ "$type" = "updated" ]] && [[ $sender != _* ]]; then
        # get the latest changes for that database
        response=`curl -s "${CLOUDANT_BASE_URL}/${sender}/_changes?since=${seqs[${sender}]}&include_docs=true"`
        # display the message(s)
        echo "${response}" | jq -r '.results[] | .doc.text' | while read message; do
            echo "${sender}: ${message}"
        done
        # update the sequence number
        seqs[$sender]=`echo "${response}" | jq -r '.last_seq'`
    fi
done
